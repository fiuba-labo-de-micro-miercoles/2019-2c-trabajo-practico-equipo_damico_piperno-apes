;codigo que incluye función para leer datos del módulo amplificador y conversor hx711 conectado a celda de carga
;Se trabaja con el Microcontrolador ATMega328P
.include "m328Pdef.inc"
;------------- definiciones leer_hx711 -------------
;registro auxiliar
.def A=r20

;defino los registros de I/O que voy a usar
.equ DDR_ADSK = DDRB
.equ DDR_ADDO = DDRB
.equ port_ADSK = portB
.equ pin_ADDO = pinB

;pines de el/los puerto/s a utilizar
.equ ADSK = 0
.equ ADDO = 1

;registros de salida del dato leido
.def peso_leido_L = r16
.def peso_leido_M = r17
.def peso_leido_H = r18
;-----------------------------------------------

/* El conversor Analógico/Digital HX711 tiene 2 terminales: DT y SCK.
DT es una entrada para el micro (con pull-up) y SCK es una salida del microcontrolador.
Con SCK en alto x más de 60uS el HX711 entra en modo bajo consumo.
Con SCK en bajo, el HX711 convierte a razón de 10 muestras x segundo.
Cuando termina una conversión HX711 baja DT y se pueden leer los 24 bits del resultado de la conversión.
Se lee un bit levantando y bajando SCK (1uS arriba y 1uS abajo) y a continuación mirando el nivel en el pin DT.
Repitiendo 24 veces se obtiene el valor de la conversión. El bit más significativo se lee primero.
Luego de estos 24 pulsos en SCK se decide cuál es la siguiente conversión pulsando SCK:
   1 vez : canal_A con ganancia x 128
   2 veces: canal_B con ganancia x 32
   3 veces: canal_B con ganancia x 64
Cuando el HX711 termina la siguiente conversión vuelve a bajar DT.
*/

.dseg


.cseg
  	.ORG 0x00
  	rjmp main
	  .ORG int_vectors_size

main:
	  ;inicializo el SP
	  ldi r20, high(RAMEND)
	  out sph, r20
	  ldi r20, low(RAMEND)
	  out spl, r20

	  ;inicializo los pines de clock y dato conectados
	  sbi DDR_ADSK, ADSK
	  cbi DDR_ADDO, ADDO

loop:
  	rcall readAD
	  rjmp loop


;leer conversión analógica digital
;salida: r18:r17:r16 (r16 lsb), r19 es un contador
;ADSK es el pin del clock para el hx711, ADDO es el pin de datos del hx711, Asume que las conexiones estan en el puerto D
;A es un registro acumulador
leer_hx711:
  	  push r19
	  push A

  	  ;habilito la conversión de datos si no estaba activada
	  cbi port_ADSK, ADSK

  	  ;si no termino la conversión vuelve a chequear ADDO
AD_not_finished:
	  sbic pin_ADDO, ADDO 	
	  rjmp AD_not_finished

  	  ;cargo el contador r19 con 24 para pasar 24 bits
	  ldi r19, 24

ShiftOut:
	  ;mando un pulso de clock
	  sbi port_ADSK, ADSK
	  ;se necesita delay de 1us aproximadamente, usamos 18 ciclos de máquina (con freq=16MHz), por lo que tarda 1,125us
	  rcall T_high
	  cbi port_ADSK, ADSK

  	  ;guarda el dato leido en el carry
	  sbic pin_ADDO, ADDO
	  sec			
	
	  ;guarda el bit leido en los registros
	  mov A,peso_leido_L
  	rol A
	  mov peso_leido_L,A
  	mov A,peso_leido_M
  	rol A
	  mov peso_leido_M,A
  	mov A,peso_leido_H
  	rol A
	  mov peso_leido_H,A
	  ;chequeo si movio los 24 bits
  	dec r19
	  brne ShiftOut

  	;mando 1 pulso mas para indicar que la proxima conversión sea de la entrada A del modulo
	  sbi port_ADSK, ADSK
	  rcall T_high

  	;el clock debe terminar en bajo para no entrar en modo de bajo consumo del hx711
  	cbi port_ADSK, ADSK

  	pop A
  	pop r19
  	ret 
	
	
;este delay dura 15 ciclos de maquina, sin contar el rcall
T_high:
	push r16
	ldi r16, 3
T_h_loop:
	dec r16
	brne T_h_loop
	
	pop r16
	ret
